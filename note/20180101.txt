基于Linux名字空间的Web服务器动态防御方法

关键字：容器 Linux名字空间 动态防御 虚拟化

Web服务器部署到以Docker容器为代表的云平台上

传统Web服务器保护机制包括入侵隔离技术、入侵检测系统和入侵防御系统
动态弹性防御技术：入侵容忍技术、移动目标防御技术和拟动态防御技术

名字空间:提供了一种资源虚拟化和隔离方案，使得PID , IPC , Network等系统资源不再是全局的，而是属于某个特定的名字空间。

基于名字空间的Web服务器动态防御方法的实现过程:
    1.首先使用Linux名字空间构建一个纯净的、无恶意软件的环境来运行Web服务器;
	2.当Wetb服务器运行一段时间后，再次使用Linux名字空间构建一个新的纯净的、无恶意软件的环境来运行Web服务器，并代
替原来的Web服务器向用户提供服务。
	3.原Web服务器处理完所有剩余请求后结束运行或因超时终止后进入后台进行清洗，待清洗完成后进入候选队列，在某个时刻
会再次运行并为用户服务。

Web服务器调度:Web服务器调度控制器是实现基于Linux名字空间的动态防御的核心。控制器位于Web服务器运行环境之外.
本文将Web服务器调度的一个周期分为以下四个过程。
    1)活跃期:Web服务器在线，接收和处理任何请求;
    2)收尾期:Web服务器处理已存在的请求，但不再接收新的请求;
    3)离线期:Web服务器已下线，隔离互联网，可以清洗;
    4)等待期:Web服务器被重置到原始状态，等待再次上线。
		
总结:根据本文表现的内容，应该是从攻击者的角度（攻击web服务器，获得用户权限，提权，拿下数据库和主机）出发，结合近些年流
行的容器技术，在总体上参照操作系统的进程管理，不够在本文中管理的资源就是每个容器（运行Web服务器的环境）
如果实现本文所说，黑客在获得Web的用户权限后，并不能获得主机的Root权限，这样一定程度上增加了主机的安全性